-- File: Sigma Loader (No Rayfield).lua
-- Purpose: Always run sigmaster, then detect current game title and load the matching script.
-- Safety: No UI libs, no webhooks, no data exfiltration.

-- =========================
-- Helpers
-- =========================
local function httpget(url)
    return game:HttpGet(url)
end

local function run_remote(url, label)
    local ok, err = pcall(function()
        return loadstring(httpget(url))()
    end)
end

-- =========================
-- Discord Notification
-- =========================
local function show_discord_notification()
    -- Discord link is handled by the button in the loading screen
end

-- Show Discord notification first (placeholder)
show_discord_notification()

-- =========================
-- Always run base script (sigmaster)
-- =========================
run_remote("https://raw.githubusercontent.com/fpszrxy/sigma/refs/heads/main/sigmaster", "sigmaster")

-- =========================
-- Game detection by title (MarketplaceService)
-- =========================
local MarketplaceService = game:GetService("MarketplaceService")
local ok, info = pcall(MarketplaceService.GetProductInfo, MarketplaceService, game.PlaceId)
local title = ""
if ok and info and typeof(info.Name) == "string" then
    title = string.lower(info.Name)
end

-- Map of friendly names -> URLs
local URLS = {
    ["bladeball"] = "https://raw.githubusercontent.com/fpszrxy/sigma/refs/heads/main/Bladeball",
    ["99 nights"] = "https://raw.githubusercontent.com/fpszrxy/sigma/refs/heads/main/99nightsforest",
    ["basketball legends"] = "https://raw.githubusercontent.com/fpszrxy/sigma/refs/heads/main/Basketball%20Legends.lua",
    ["build a boat"] = "https://raw.githubusercontent.com/fpszrxy/sigma/refs/heads/main/babft",
    ["steal a brainrot"] = "https://raw.githubusercontent.com/fpszrxy/sigma/refs/heads/main/steal%20a%20brainrot",
    ["fish it"] = "https://raw.githubusercontent.com/fpszrxy/sigma/refs/heads/main/fish%20it",
    ["anime eternal"] = "https://raw.githubusercontent.com/fpszrxy/sigma/refs/heads/main/Anime%20Eternal"
}

-- Map of PlaceIds -> URLs
local PLACEID_URLS = {
    -- Blade Ball (main + alternate places)
    [13772394625] = URLS["bladeball"],
    [14525514348] = URLS["bladeball"],
    [14732610803] = URLS["bladeball"],

    -- 99 Nights
    [126509999114328] = URLS["99 nights"],

    -- Basketball Legends
    [12355337193] = URLS["basketball legends"],
    [14386691987] = URLS["basketball legends"],
    
    -- Build A Boat
    [537413528] = URLS["build a boat"],
    
    -- Steal A Brainrot (multiple versions)
    [96342491571673] = URLS["steal a brainrot"],
    [7709344486] = URLS["steal a brainrot"],
    
    -- Fish It!
    [121864768012064] = URLS["fish it"],
    
    -- Anime Eternal
    [90462358603255] = URLS["anime eternal"]
}

-- =========================
-- Loading Screen Function
-- =========================
local function show_loading_screen()
    local Players = game:GetService("Players")
    local gui = Instance.new("ScreenGui")
    gui.Name = "LoadingScreenGui"
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true -- Ignore Roblox topbar for full coverage
    gui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0) -- Full screen
    frame.Position = UDim2.new(0, 0, 0, 0) -- Top-left corner
    frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    frame.BackgroundTransparency = 0.3
    frame.BorderSizePixel = 0
    frame.Parent = gui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame

    local text = Instance.new("TextLabel")
    text.Size = UDim2.new(1, -80, 0.7, -80) -- Adjusted height for timer
    text.Position = UDim2.new(0, 40, 0, 40) -- Centered with padding
    text.BackgroundTransparency = 1
    text.Text = " Thank you for choosing ChaseSdd Hub!\nClick below to copy our Discord link and enjoy!"
    text.TextColor3 = Color3.fromRGB(255, 255, 255)
    text.TextScaled = true
    text.TextWrapped = true -- Allow text wrapping for long message
    text.Font = Enum.Font.SourceSansBold
    text.TextXAlignment = Enum.TextXAlignment.Center
    text.TextYAlignment = Enum.TextYAlignment.Center
    text.Parent = frame

    -- Countdown timer
    local timer_text = Instance.new("TextLabel")
    timer_text.Size = UDim2.new(1, -80, 0.1, 0) -- Small height for timer
    timer_text.Position = UDim2.new(0, 40, 0.7, -40) -- Below main text
    timer_text.BackgroundTransparency = 1
    timer_text.Text = "8 seconds until script loads..."
    timer_text.TextColor3 = Color3.fromRGB(255, 255, 255)
    timer_text.TextScaled = true
    timer_text.TextWrapped = true
    timer_text.Font = Enum.Font.SourceSansBold
    timer_text.TextXAlignment = Enum.TextXAlignment.Center
    timer_text.TextYAlignment = Enum.TextYAlignment.Center
    timer_text.Parent = frame

    -- Discord button
    local discord_button = Instance.new("TextButton")
    discord_button.Size = UDim2.new(0, 300, 0, 80) -- Larger for 4K displays
    discord_button.Position = UDim2.new(0.5, -150, 0.85, -40) -- Centered below timer
    discord_button.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
    discord_button.Text = "Copy Discord Link"
    discord_button.TextColor3 = Color3.fromRGB(255, 255, 255)
    discord_button.TextScaled = true
    discord_button.Font = Enum.Font.SourceSansSemibold
    discord_button.Parent = frame

    -- Discord button corner
    local discord_corner = Instance.new("UICorner")
    discord_corner.CornerRadius = UDim.new(0, 8) -- Slightly larger for 4K
    discord_corner.Parent = discord_button

    -- Discord button functionality
    discord_button.MouseButton1Click:Connect(function()
        local discord_url = "https://discord.gg/PAy8Ht3SDC"
        pcall(function()
            setclipboard(discord_url)
            game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):SetTopbarTransparency(0) -- Briefly show topbar for feedback
            task.wait(0.5)
            game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):SetTopbarTransparency(1)
        end)
    end)

    -- Countdown logic
    for i = 8, 1, -1 do
        timer_text.Text = tostring(i) .. " second" .. (i == 1 and "" or "s") .. " until script loads..."
        task.wait(1)
    end
    gui:Destroy()

    return gui
end

-- =========================
-- GUI Creation Function
-- =========================
local function create_not_supported_gui()
    local Players = game:GetService("Players")
    local UserInputService = game:GetService("UserInputService")
    local gui = Instance.new("ScreenGui")
    gui.Name = "SigmaNotSupportedGui"
    gui.ResetOnSpawn = false
    gui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Main frame
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 180)
    frame.Position = UDim2.new(0.5, -150, 0.5, -90)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.Parent = gui

    -- Corner rounding
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame

    -- Title text
    local title_text = Instance.new("TextLabel")
    title_text.Size = UDim2.new(1, -20, 0, 40)
    title_text.Position = UDim2.new(0, 10, 0, 10)
    title_text.BackgroundTransparency = 1
    title_text.Text = "Game Not Supported"
    title_text.TextColor3 = Color3.fromRGB(255, 255, 255)
    title_text.TextScaled = true
    title_text.TextWrapped = true
    title_text.Font = Enum.Font.SourceSansBold
    title_text.Parent = frame

    -- Message text
    local message_text = Instance.new("TextLabel")
    message_text.Size = UDim2.new(1, -20, 0, 60)
    message_text.Position = UDim2.new(0, 10, 0, 50)
    message_text.BackgroundTransparency = 1
    message_text.Text = "Please tell us to add support in our Discord community!"
    message_text.TextColor3 = Color3.fromRGB(200, 200, 200)
    message_text.TextScaled = true
    message_text.TextWrapped = true
    message_text.Font = Enum.Font.SourceSans
    message_text.Parent = frame

    -- Discord button
    local discord_button = Instance.new("TextButton")
    discord_button.Size = UDim2.new(0, 120, 0, 40)
    discord_button.Position = UDim2.new(0.5, -60, 1, -50)
    discord_button.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
    discord_button.Text = "Join Discord"
    discord_button.TextColor3 = Color3.fromRGB(255, 255, 255)
    discord_button.TextScaled = true
    discord_button.Font = Enum.Font.SourceSansSemibold
    discord_button.Parent = frame

    -- Discord button corner
    local discord_corner = Instance.new("UICorner")
    discord_corner.CornerRadius = UDim.new(0, 4)
    discord_corner.Parent = discord_button

    -- Discord button functionality
    discord_button.MouseButton1Click:Connect(function()
        local discord_url = "https://discord.gg/PAy8Ht3SDC"
        pcall(function()
            setclipboard(discord_url)
            game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):SetTopbarTransparency(0) -- Briefly show topbar for feedback
            task.wait(0.5)
            game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):SetTopbarTransparency(1)
        end)
    end)

    -- Close button
    local close_button = Instance.new("TextButton")
    close_button.Size = UDim2.new(0, 30, 0, 30)
    close_button.Position = UDim2.new(1, -40, 0, 0) -- Top-right corner
    close_button.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    close_button.Text = "X"
    close_button.TextColor3 = Color3.fromRGB(255, 255, 255)
    close_button.TextScaled = true
    close_button.Font = Enum.Font.SourceSansBold
    close_button.Parent = frame

    -- Close button corner
    local button_corner = Instance.new("UICorner")
    button_corner.CornerRadius = UDim.new(0, 4)
    button_corner.Parent = close_button

    -- Close button functionality
    close_button.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)

    -- Allow dragging the GUI
    local dragging, dragInput, dragStart, startPos
    local function update_input(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update_input(input)
        end
    end)

    return gui
end

-- =========================
-- Title-based routing
-- =========================
local matched = false
if title ~= "" then
    if title:find("blade%p*%s*ball") or title:find("bladeball") then
        local loading_gui = show_loading_screen()
        run_remote(URLS["bladeball"], "Blade Ball")
        matched = true
    elseif title:find("%f[%w]99%f[%W]%s*nights") or title:find("99%s*nights") or title:find("99nights") then
        local loading_gui = show_loading_screen()
        run_remote(URLS["99 nights"], "99 Nights")
        matched = true
    elseif title:find("basketball%s*legends") then
        local loading_gui = show_loading_screen()
        run_remote(URLS["basketball legends"], "Basketball Legends")
        matched = true
    elseif title:find("build%s*a%s*boat") or title:find("buildaboat") or title:find("babft") or title:find("for treasure") then
        local loading_gui = show_loading_screen()
        run_remote(URLS["build a boat"], "Build A Boat")
        matched = true
    elseif title:find("steal%s*a%s*brainrot") or title:find("stealabrainrot") then
        local loading_gui = show_loading_screen()
        run_remote(URLS["steal a brainrot"], "Steal A Brainrot")
        matched = true
    elseif title:find("fish%p*%s*it") or title:find("fishit") then
        local loading_gui = show_loading_screen()
        run_remote(URLS["fish it"], "Fish It!")
        matched = true
    elseif title:find("anime%s*eternal") or title:find("animeeternal") then
        local loading_gui = show_loading_screen()
        run_remote(URLS["anime eternal"], "Anime Eternal")
        matched = true
    end
end

-- =========================
-- PlaceId fallback (only if title detection failed)
-- =========================
if not matched then
    local url = PLACEID_URLS[game.PlaceId]
    if url then
        local loading_gui = show_loading_screen()
        run_remote(url, "PlaceId=" .. tostring(game.PlaceId))
        matched = true
    end
end

-- =========================
-- Show GUI if no script matched
-- =========================
if not matched then
    create_not_supported_gui()
end

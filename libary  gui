--// library script private
getgenv().namehub = "Chasesdd"
local UserInputService = game:GetService('UserInputService')
local LocalPlayer = game:GetService('Players').LocalPlayer
local TweenService = game:GetService('TweenService')
local HttpService = game:GetService('HttpService')
local CoreGui = game:GetService('CoreGui')

local Mouse = LocalPlayer:GetMouse();


local Library = {
	connections = {};
    Flags = {};
    Enabled = true;
    slider_drag = false;
    core = nil;
    dragging = false;
    drag_position = nil;
    start_position = nil;
}


if not isfolder("chasesdd hub") then
    makefolder("chasesdd hub")
end

function Library:disconnect()
	for _, value in Library.connections do
		if not Library.connections[value] then
			continue
		end

		Library.connections[value]:Disconnect()
		Library.connections[value] = nil
	end
end

function Library:clear()
	for _, object in CoreGui:GetChildren() do
		if object.Name ~= "chasesdd" then
			continue
		end
	
		object:Destroy()
	end
end

function Library:exist()
    if not Library.core then return end
    if not Library.core.Parent then return end
    return true
end

function Library:save_flags()
    if not Library.exist() then return end

    local flags = HttpService:JSONEncode(Library.Flags)
    writefile(`chasesdd hub/{game.GameId}.lua`, flags)
end

function Library:load_flags()
    if not isfile(`chasesdd hub/{game.GameId}.lua`) then Library.save_flags() return end

    local flags = readfile(`chasesdd hub/{game.GameId}.lua`)
    if not flags then Library.save_flags() return end

    Library.Flags = HttpService:JSONDecode(flags)
end

Library.load_flags()
Library.clear()

function Library:open()
	self.Container.Visible = true
	self.Shadow.Visible = true
	self.Mobile.Modal = true

	TweenService:Create(self.Container, TweenInfo.new(0.6, Enum.EasingStyle.Circular, Enum.EasingDirection.InOut), {
		Size = UDim2.new(0, 699, 0, 426)
	}):Play()

	TweenService:Create(self.Shadow, TweenInfo.new(0.6, Enum.EasingStyle.Circular, Enum.EasingDirection.InOut), {
		Size = UDim2.new(0, 776, 0, 509)
	}):Play()
end

function Library:close()
	TweenService:Create(self.Shadow, TweenInfo.new(0.6, Enum.EasingStyle.Circular, Enum.EasingDirection.InOut), {
		Size = UDim2.new(0, 0, 0, 0)
	}):Play()

	local main_tween = TweenService:Create(self.Container, TweenInfo.new(0.6, Enum.EasingStyle.Circular, Enum.EasingDirection.InOut), {
		Size = UDim2.new(0, 0, 0, 0)
	})

	main_tween:Play()
	main_tween.Completed:Once(function()
		if Library.enabled then
			return
		end

		self.Container.Visible = false
		self.Shadow.Visible = false
		self.Mobile.Modal = false
	end)
end

function Library:drag()
	if not Library.drag_position then
		return
	end
	
	if not Library.start_position then
		return
	end
	
	local delta = self.input.Position - Library.drag_position
	local position = UDim2.new(Library.start_position.X.Scale, Library.start_position.X.Offset + delta.X, Library.start_position.Y.Scale, Library.start_position.Y.Offset + delta.Y)

	TweenService:Create(self.container.Container, TweenInfo.new(0.2), {
		Position = position
	}):Play()

    TweenService:Create(self.container.Shadow, TweenInfo.new(0.2), {
		Position = position
	}):Play()
end

function Library:visible()
	Library.enabled = not Library.enabled

	if Library.enabled then
		Library.open(self)
	else
		Library.close(self)
	end
end

function Library:new()
	local container = Instance.new("ScreenGui")
	container.Name = "chasesdd"
    container.Parent = CoreGui

    Library.core = container

	local Shadow = Instance.new("ImageLabel")
	Shadow.Name = "Shadow"
	Shadow.Parent = container
	Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	Shadow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Shadow.BackgroundTransparency = 1.000
	Shadow.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Shadow.BorderSizePixel = 0
	Shadow.Position = UDim2.new(0.508668244, 0, 0.5, 0)
	Shadow.Size = UDim2.new(0, 776, 0, 509)
	Shadow.ZIndex = 0
	Shadow.Image = "rbxassetid://17290899982"

	local Container = Instance.new("Frame")
	Container.Name = "Container"
	Container.Parent = container
	Container.AnchorPoint = Vector2.new(0.5, 0.5)
	Container.BackgroundColor3 = Color3.fromRGB(19, 20, 24)
	Container.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Container.BorderSizePixel = 0
	Container.ClipsDescendants = true
	Container.Position = UDim2.new(0.5, 0, 0.5, 0)
	Container.Size = UDim2.new(0, 699, 0, 426)

	local ContainerCorner = Instance.new("UICorner")
	ContainerCorner.CornerRadius = UDim.new(0, 20)
	ContainerCorner.Parent = container.Container

	local Top = Instance.new("ImageLabel")
	Top.Name = "Top"
	Top.Parent = Container
	Top.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Top.BackgroundTransparency = 1.000
	Top.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Top.BorderSizePixel = 0
	Top.Size = UDim2.new(0, 699, 0, 39)
	Top.Image = ""

	local Logo = Instance.new("ImageLabel")
	Logo.Name = "Logo"
	Logo.Parent = Top
	Logo.AnchorPoint = Vector2.new(0.5, 0.5)
	Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Logo.BackgroundTransparency = 1.000
	Logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Logo.BorderSizePixel = 0
	Logo.Position = UDim2.new(0.0387367606, 0, 0.5, 0)
	Logo.Size = UDim2.new(0, 30, 0, 25)
	Logo.Image = ""
	
	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = Top
	TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Position = UDim2.new(0.0938254446, 0, 0.496794879, 0)
	TextLabel.Size = UDim2.new(0, 75, 0, 16)
	TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
	TextLabel.Text = getgenv().namehub
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14.000
	TextLabel.TextWrapped = true
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left

	local Line = Instance.new("Frame")
	Line.Name = "Line"
	Line.Parent = Container
	Line.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
	Line.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Line.BorderSizePixel = 0
	Line.Position = UDim2.new(0.296137333, 0, 0.0915492922, 0)
	Line.Size = UDim2.new(0, 2, 0, 387)

    local tabs = Instance.new("ScrollingFrame")
	tabs.Name = "Tabs"
	tabs.Active = true
	tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	tabs.BackgroundTransparency = 1.000
	tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
	tabs.BorderSizePixel = 0
	tabs.Position = UDim2.new(0, 0, 0.0915492922, 0)
	tabs.Size = UDim2.new(0, 209, 0, 386)
	tabs.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
	tabs.ScrollBarThickness = 0
    tabs.Parent = container.Container

	local tabslist = Instance.new("UIListLayout")
	tabslist.Parent = tabs
	tabslist.HorizontalAlignment = Enum.HorizontalAlignment.Center
	tabslist.SortOrder = Enum.SortOrder.LayoutOrder
	tabslist.Padding = UDim.new(0, 9)

	local UIPadding = Instance.new("UIPadding")
	UIPadding.Parent = tabs
	UIPadding.PaddingTop = UDim.new(0, 15)

	local tabsCorner = Instance.new("UICorner")
	tabsCorner.Parent = tabs

    local mobile_button = Instance.new("TextButton")
	mobile_button.Name = "Mobile"
	mobile_button.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
	mobile_button.BorderColor3 = Color3.fromRGB(0, 0, 0)
	mobile_button.BorderSizePixel = 0
	mobile_button.Position = UDim2.new(0.0210955422, 0, 0.91790241, 0)
	mobile_button.Size = UDim2.new(0, 122, 0, 38)
	mobile_button.AutoButtonColor = false
	mobile_button.Modal = true
	mobile_button.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
	mobile_button.Text = ""
	mobile_button.TextColor3 = Color3.fromRGB(0, 0, 0)
	mobile_button.TextSize = 14.000
    mobile_button.Parent = container

	local UICorner = Instance.new("UICorner")
	UICorner.CornerRadius = UDim.new(0, 13)
	UICorner.Parent = mobile_button

	local shadowMobile = Instance.new("ImageLabel")
	shadowMobile.Name = "Shadow"
	shadowMobile.Parent = mobile_button
	shadowMobile.AnchorPoint = Vector2.new(0.5, 0.5)
	shadowMobile.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	shadowMobile.BackgroundTransparency = 1.000
	shadowMobile.BorderColor3 = Color3.fromRGB(0, 0, 0)
	shadowMobile.BorderSizePixel = 0
	shadowMobile.Position = UDim2.new(0.5, 0, 0.5, 0)
	shadowMobile.Size = UDim2.new(0, 144, 0, 58)
	shadowMobile.ZIndex = 0
	shadowMobile.Image = "rbxassetid://17183270335"
	shadowMobile.ImageTransparency = 0.200

	local State = Instance.new("TextLabel")
	State.Name = "State"
	State.Parent = mobile_button
	State.AnchorPoint = Vector2.new(0.5, 0.5)
	State.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	State.BackgroundTransparency = 1.000
	State.BorderColor3 = Color3.fromRGB(0, 0, 0)
	State.BorderSizePixel = 0
	State.Position = UDim2.new(0.646000028, 0, 0.5, 0)
	State.Size = UDim2.new(0, 64, 0, 15)
	State.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
	State.Text = "Open"
	State.TextColor3 = Color3.fromRGB(255, 255, 255)
	State.TextScaled = true
	State.TextSize = 14.000
	State.TextWrapped = true
	State.TextXAlignment = Enum.TextXAlignment.Left

	local Icon = Instance.new("ImageLabel")
	Icon.Name = "Icon"
	Icon.Parent = mobile_button
	Icon.AnchorPoint = Vector2.new(0.5, 0.5)
	Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Icon.BackgroundTransparency = 1.000
	Icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Icon.BorderSizePixel = 0
	Icon.Position = UDim2.new(0.268000007, 0, 0.5, 0)
	Icon.Size = UDim2.new(0, 15, 0, 15)
	Icon.Image = "rbxassetid://17183279677"
    container.Container.InputBegan:Connect(function(input: InputObject)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.MouseButton2 then
            Library.dragging = true
            Library.drag_position = input.Position
            Library.start_position = container.Container.Position
        end
    end)

    container.Container.InputChanged:Connect(function(input: InputObject)
        if input.UserInputType == Enum.UserInputType.MouseMovement and Library.dragging then
            Library:drag()
        end
    end)

    container.Container.InputEnded:Connect(function(input: InputObject)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.MouseButton2 then
            Library.dragging = false
        end
    end)

    mobile_button.MouseButton1Click:Connect(function()
        Library:visible()
    end)

    Library.Mobile = mobile_button
    Library.Shadow = Shadow
    Library.Container = Container

    return self
end

function Library:create_tab(name)
    local Tab = {}
    local tab_button = Instance.new("TextButton")
	tab_button.Name = "Tab"
	tab_button.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
	tab_button.BorderColor3 = Color3.fromRGB(0, 0, 0)
	tab_button.BorderSizePixel = 0
	tab_button.Size = UDim2.new(0, 190, 0, 38)
	tab_button.AutoButtonColor = false
	tab_button.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
	tab_button.Text = ""
	tab_button.TextColor3 = Color3.fromRGB(0, 0, 0)
	tab_button.TextSize = 14.000
    tab_button.Parent = self.core.Container.Tabs

	local UICorner = Instance.new("UICorner")
	UICorner.CornerRadius = UDim.new(0, 13)
	UICorner.Parent = tab_button

	local shadowTab = Instance.new("ImageLabel")
	shadowTab.Name = "Shadow"
	shadowTab.Parent = tab_button
	shadowTab.AnchorPoint = Vector2.new(0.5, 0.5)
	shadowTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	shadowTab.BackgroundTransparency = 1.000
	shadowTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
	shadowTab.BorderSizePixel = 0
	shadowTab.Position = UDim2.new(0.5, 0, 0.5, 0)
	shadowTab.Size = UDim2.new(0, 210, 0, 58)
	shadowTab.ZIndex = 0
	shadowTab.Image = "rbxassetid://17183270335"
	shadowTab.ImageTransparency = 0.200

	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = tab_button
	TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
	TextLabel.Size = UDim2.new(0, 170, 0, 15)
	TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
	TextLabel.Text = name
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14.000
	TextLabel.TextWrapped = true

    local left_section = Instance.new("ScrollingFrame")
	left_section.Name = "Left"
	left_section.Active = true
	left_section.AnchorPoint = Vector2.new(0.5, 0.5)
	left_section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	left_section.BackgroundTransparency = 1.000
	left_section.BorderColor3 = Color3.fromRGB(0, 0, 0)
	left_section.BorderSizePixel = 0
	left_section.Position = UDim2.new(0.384165913, 0, 0.590140879, 0)
	left_section.Size = UDim2.new(0, 206, 0, 332)
	left_section.Visible = false
	left_section.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
	left_section.ScrollBarThickness = 0
    left_section.Parent = self.core.Container

	local left_list = Instance.new("UIListLayout")
	left_list.Parent = left_section
	left_list.HorizontalAlignment = Enum.HorizontalAlignment.Center
	left_list.SortOrder = Enum.SortOrder.LayoutOrder
	left_list.Padding = UDim.new(0, 10)

	local left_padding = Instance.new("UIPadding")
	left_padding.Parent = left_section
	left_padding.PaddingTop = UDim.new(0, 10)

    local right_section = Instance.new("ScrollingFrame")
	right_section.Name = "Right"
	right_section.Active = true
	right_section.AnchorPoint = Vector2.new(0.5, 0.5)
	right_section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	right_section.BackgroundTransparency = 1.000
	right_section.BorderColor3 = Color3.fromRGB(0, 0, 0)
	right_section.BorderSizePixel = 0
	right_section.Position = UDim2.new(0.698340297, 0, 0.590140879, 0)
	right_section.Size = UDim2.new(0, 206, 0, 332)
	right_section.Visible = false
	right_section.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
	right_section.ScrollBarThickness = 0
    right_section.Parent = self.core.Container

	local right_list = Instance.new("UIListLayout")
	right_list.Parent = right_section
	right_list.HorizontalAlignment = Enum.HorizontalAlignment.Center
	right_list.SortOrder = Enum.SortOrder.LayoutOrder
	right_list.Padding = UDim.new(0, 10)

	local right_padding = Instance.new("UIPadding")
	right_padding.Parent = right_section
	right_padding.PaddingTop = UDim.new(0, 10)

    tab_button.MouseButton1Click:Connect(function()
        for _, value in self.core.Container.Tabs:GetChildren() do
            if not value:IsA("TextButton") then
                continue
            end

            value.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
            value.Shadow.ImageTransparency = 0.200
        end

        for _, value in self.core.Container:GetChildren() do
            if not value:IsA("ScrollingFrame") then
                continue
            end

            value.Visible = false
        end

        tab_button.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
        tab_button.Shadow.ImageTransparency = 0.050

        left_section.Visible = true
        right_section.Visible = true
    end)

    function Tab:create_title(options)
        local section = options.section == 'left' and left_section or right_section
        local title = Instance.new("TextLabel")
		title.Name = "Title"
		title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		title.BackgroundTransparency = 1.000
		title.BorderColor3 = Color3.fromRGB(0, 0, 0)
		title.BorderSizePixel = 0
		title.Size = UDim2.new(0, 215, 0, 14)
		title.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
		title.Text = options.name
		title.TextColor3 = Color3.fromRGB(255, 255, 255)
		title.TextScaled = true
		title.TextSize = 14.000
		title.TextWrapped = true
		title.TextXAlignment = Enum.TextXAlignment.Left
        title.Parent = section
    end

    function Tab:create_toggle(options)
        local section = options.section == 'left' and left_section or right_section
        local toggle = Instance.new("TextButton")
		toggle.Name = "Toggle"
		toggle.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
		toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
		toggle.BorderSizePixel = 0
		toggle.Size = UDim2.new(0, 215, 0, 37)
		toggle.AutoButtonColor = false
		toggle.Font = Enum.Font.SourceSans
		toggle.Text = ""
		toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
		toggle.TextSize = 14.000
        toggle.Parent = section

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 10)
		UICorner.Parent = toggle

		local TextLabel = Instance.new("TextLabel")
		TextLabel.Parent = toggle
		TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.BorderSizePixel = 0
		TextLabel.Position = UDim2.new(0.424475819, 0, 0.5, 0)
		TextLabel.Size = UDim2.new(0, 155, 0, 15)
		TextLabel.ZIndex = 2
		TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
		TextLabel.Text = options.name
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		local Box = Instance.new("Frame")
		Box.Name = "Box"
		Box.Parent = toggle
		Box.AnchorPoint = Vector2.new(0.5, 0.5)
		Box.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
		Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Box.BorderSizePixel = 0
		Box.Position = UDim2.new(0.875459313, 0, 0.472972959, 0)
		Box.Size = UDim2.new(0, 27, 0, 21)

		local UICorner_2 = Instance.new("UICorner")
		UICorner_2.CornerRadius = UDim.new(0, 4)
		UICorner_2.Parent = Box

		local Knob = Instance.new("Frame")
		Knob.Name = "Knob"
		Knob.Parent = Box
		Knob.AnchorPoint = Vector2.new(0.5, 0.5)
		Knob.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
		Knob.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Knob.BorderSizePixel = 0
		Knob.Position = UDim2.new(0.333333343, 0, 0.5, 0)
		Knob.Size = UDim2.new(0, 13, 0, 13)

		local UICorner_3 = Instance.new("UICorner")
		UICorner_3.CornerRadius = UDim.new(0, 3)
		UICorner_3.Parent = Knob

        if not Library.Flags[options.flag] then
            Library.Flags[options.flag] = options.enabled or false
        end

        if Library.Flags[options.flag] then
            Box.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            Knob.Position = UDim2.new(0.666666687, 0, 0.5, 0)
        end

        toggle.MouseButton1Click:Connect(function()
            Library.Flags[options.flag] = not Library.Flags[options.flag]

            if Library.Flags[options.flag] then
                TweenService:Create(Box, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                }):Play()

                TweenService:Create(Knob, TweenInfo.new(0.2), {
                    Position = UDim2.new(0.666666687, 0, 0.5, 0)
                }):Play()
            else
                TweenService:Create(Box, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(22, 23, 27)
                }):Play()

                TweenService:Create(Knob, TweenInfo.new(0.2), {
                    Position = UDim2.new(0.333333343, 0, 0.5, 0)
                }):Play()
            end

            options.callback(Library.Flags[options.flag])
            Library.save_flags()
        end)
    end

    function Tab:create_slider(options)
        local section = options.section == 'left' and left_section or right_section
        local slider = Instance.new("TextButton")
		slider.Name = "Slider"
		slider.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
		slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
		slider.BorderSizePixel = 0
		slider.Size = UDim2.new(0, 215, 0, 36)
		slider.AutoButtonColor = false
		slider.Font = Enum.Font.SourceSans
		slider.Text = ""
		slider.TextColor3 = Color3.fromRGB(0, 0, 0)
		slider.TextSize = 14.000
        slider.Parent = section

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 10)
		UICorner.Parent = slider

		local TextLabel = Instance.new("TextLabel")
		TextLabel.Parent = slider
		TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.BorderSizePixel = 0
		TextLabel.Position = UDim2.new(0.424475819, 0, 0.5, 0)
		TextLabel.Size = UDim2.new(0, 155, 0, 15)
		TextLabel.ZIndex = 2
		TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
		TextLabel.Text = options.name
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		local Box = Instance.new("Frame")
		Box.Name = "Box"
		Box.Parent = slider
		Box.AnchorPoint = Vector2.new(0.5, 0.5)
		Box.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
		Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Box.BorderSizePixel = 0
		Box.Position = UDim2.new(0.875459313, 0, 0.472972959, 0)
		Box.Size = UDim2.new(0, 27, 0, 21)

		local UICorner_2 = Instance.new("UICorner")
		UICorner_2.CornerRadius = UDim.new(0, 4)
		UICorner_2.Parent = Box

		local Fill = Instance.new("Frame")
		Fill.Name = "Fill"
		Fill.Parent = Box
		Fill.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		Fill.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Fill.BorderSizePixel = 0
		Fill.Size = UDim2.new(0, 0, 1, 0)

		local UICorner_3 = Instance.new("UICorner")
		UICorner_3.CornerRadius = UDim.new(0, 4)
		UICorner_3.Parent = Fill

		local Value = Instance.new("TextLabel")
		Value.Parent = slider
		Value.AnchorPoint = Vector2.new(0.5, 0.5)
		Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Value.BackgroundTransparency = 1.000
		Value.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Value.BorderSizePixel = 0
		Value.Position = UDim2.new(0.875459313, 0, 0.472972959, 0)
		Value.Size = UDim2.new(0, 27, 0, 15)
		Value.ZIndex = 2
		Value.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
		Value.TextColor3 = Color3.fromRGB(255, 255, 255)
		Value.TextScaled = true
		Value.TextSize = 14.000
		Value.TextWrapped = true

        if not Library.Flags[options.flag] then
            Library.Flags[options.flag] = options.value or options.minimum_value
        end

        Value.Text = Library.Flags[options.flag]
        Fill.Size = UDim2.new((Library.Flags[options.flag] - options.minimum_value) / (options.maximum_value - options.minimum_value), 0, 1, 0)

        slider.MouseButton1Down:Connect(function()
            Library.slider_drag = true
        end)

        Mouse.Move:Connect(function()
            if not Library.slider_drag then return end

            local percentage = math.clamp((Mouse.X - Box.AbsolutePosition.X) / Box.AbsoluteSize.X, 0, 1)
            local value = math.floor(options.minimum_value + (options.maximum_value - options.minimum_value) * percentage)

            Fill.Size = UDim2.new(percentage, 0, 1, 0)
            Value.Text = value
            Library.Flags[options.flag] = value

            options.callback(value)
            Library.save_flags()
        end)

        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                Library.slider_drag = false
            end
        end)
    end

    function Tab:create_dropdown(options)
        local section = options.section == 'left' and left_section or right_section
        local Dropdown = {}
        local dropdown = Instance.new("TextButton")
		dropdown.Name = "Dropdown"
		dropdown.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
		dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
		dropdown.BorderSizePixel = 0
		dropdown.Size = UDim2.new(0, 215, 0, 36)
		dropdown.AutoButtonColor = false
		dropdown.Font = Enum.Font.SourceSans
		dropdown.Text = ""
		dropdown.TextColor3 = Color3.fromRGB(0, 0, 0)
		dropdown.TextSize = 14.000
        dropdown.Parent = section

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 10)
		UICorner.Parent = dropdown

		local TextLabel = Instance.new("TextLabel")
		TextLabel.Parent = dropdown
		TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.BorderSizePixel = 0
		TextLabel.Position = UDim2.new(0.424475819, 0, 0.5, 0)
		TextLabel.Size = UDim2.new(0, 155, 0, 15)
		TextLabel.ZIndex = 2
		TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
		TextLabel.Text = options.name
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		local Box = Instance.new("Frame")
		Box.Name = "Box"
		Box.Parent = dropdown
		Box.AnchorPoint = Vector2.new(0.5, 0.5)
		Box.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
		Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Box.BorderSizePixel = 0
		Box.Position = UDim2.new(0.875459313, 0, 0.472972959, 0)
		Box.Size = UDim2.new(0, 27, 0, 21)

		local UICorner_2 = Instance.new("UICorner")
		UICorner_2.CornerRadius = UDim.new(0, 4)
		UICorner_2.Parent = Box

		local TextLabel_2 = Instance.new("TextLabel")
		TextLabel_2.Parent = Box
		TextLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
		TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_2.BackgroundTransparency = 1.000
		TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel_2.BorderSizePixel = 0
		TextLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
		TextLabel_2.Size = UDim2.new(0, 27, 0, 15)
		TextLabel_2.ZIndex = 2
		TextLabel_2.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
		TextLabel_2.Text = "▼"
		TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_2.TextScaled = true
		TextLabel_2.TextSize = 14.000
		TextLabel_2.TextWrapped = true

        local list = Instance.new("ScrollingFrame")
		list.Name = "List"
		list.Active = true
		list.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
		list.BorderColor3 = Color3.fromRGB(0, 0, 0)
		list.BorderSizePixel = 0
		list.Position = UDim2.new(0, 0, 1, 0)
		list.Size = UDim2.new(1, 0, 0, 0)
		list.Visible = false
		list.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
		list.ScrollBarThickness = 0
        list.Parent = dropdown

		local list_corner = Instance.new("UICorner")
		list_corner.CornerRadius = UDim.new(0, 10)
		list_corner.Parent = list

		local list_list = Instance.new("UIListLayout")
		list_list.Parent = list
		list_list.HorizontalAlignment = Enum.HorizontalAlignment.Center
		list_list.SortOrder = Enum.SortOrder.LayoutOrder
		list_list.Padding = UDim.new(0, 5)

		local list_padding = Instance.new("UIPadding")
		list_padding.Parent = list
		list_padding.PaddingTop = UDim.new(0, 5)

        if not Library.Flags[options.flag] then
            Library.Flags[options.flag] = options.option
        end

        dropdown.Box.TextLabel.Text = Library.Flags[options.flag]

        function Dropdown:update()
            list:ClearAllChildren()
            list.Size = UDim2.new(1, 0, 0, list_list.AbsoluteContentSize.Y + 10)

            for _, value in options.options do
                local new_option = Instance.new("TextButton")
				new_option.Name = "Option"
				new_option.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
				new_option.BorderColor3 = Color3.fromRGB(0, 0, 0)
				new_option.BorderSizePixel = 0
				new_option.Size = UDim2.new(0, 200, 0, 30)
				new_option.AutoButtonColor = false
				new_option.Font = Enum.Font.SourceSans
				new_option.Text = value
				new_option.TextColor3 = Color3.fromRGB(255, 255, 255)
				new_option.TextSize = 14.000
                new_option.Parent = list

				local new_corner = Instance.new("UICorner")
				new_corner.CornerRadius = UDim.new(0, 6)
				new_corner.Parent = new_option

                if Library.Flags[options.flag] == value then
                    new_option.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                end

                new_option.MouseButton1Click:Connect(function()
                    Library.Flags[options.flag] = value
                    
                    if list_open then
                        dropdown.Box.TextLabel.Text = Library.Flags[options.flag]
                    end
                    options.callback(Library.Flags[options.flag])
                    Library.save_flags()

                    Dropdown.select_option({
                        new_option = new_option,
                        flag = options.flag
                    })
                end)
            end
        end

        if not Library.Flags[options.flag] then
            Library.Flags[options.flag] = options.option
        end
        
        options.callback(Library.Flags[options.flag])
        Dropdown.update(self)

        dropdown.MouseButton1Click:Connect(function()
            open = not open

            if open then
                Dropdown.open(self)
            else
                Dropdown.close(self)
            end
        end)

        return Dropdown
    end

    function Tab:create_textbox(options)
        local section = options.section == 'left' and left_section or right_section
        local Textbox = {}
        local textbox = Instance.new("TextButton")
		textbox.Name = "TextBox"
		textbox.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
		textbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
		textbox.BorderSizePixel = 0
		textbox.Size = UDim2.new(0, 215, 0, 36)
		textbox.AutoButtonColor = false
		textbox.Font = Enum.Font.SourceSans
		textbox.Text = ""
		textbox.TextColor3 = Color3.fromRGB(0, 0, 0)
		textbox.TextSize = 14.000				
        textbox.Parent = section

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 10)
		UICorner.Parent = textbox

		local UIListLayout = Instance.new("UIListLayout")
		UIListLayout.Parent = textbox
		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

		local UIPadding = Instance.new("UIPadding")
		UIPadding.Parent = textbox
		UIPadding.PaddingTop = UDim.new(0, 6)
		
		local Box = Instance.new("Frame")
		Box.Name = "Box"
		Box.Parent = textbox
		Box.AnchorPoint = Vector2.new(0.5, 0)
		Box.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
		Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Box.BorderSizePixel = 0
		Box.Position = UDim2.new(0.5, 0, 0.150000006, 0)
		Box.Size = UDim2.new(0, 202, 0, 25)
		Box.ZIndex = 2

		
		local UICorner_2 = Instance.new("UICorner")
		UICorner_2.CornerRadius = UDim.new(0, 6)
		UICorner_2.Parent = Box

		local TextHolder = Instance.new("TextBox")
		TextHolder.Name = "TextHolder"
		TextHolder.Parent = Box
		TextHolder.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
		TextHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextHolder.BorderSizePixel = 0
		TextHolder.Position = UDim2.new(0.0445544571, 0, 0.239999995, 0)
		TextHolder.Size = UDim2.new(0, 182, 0, 13)
		TextHolder.ZIndex = 2
		TextHolder.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
		TextHolder.Text = ""
		TextHolder.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextHolder.TextSize = 14.000
		TextHolder.TextXAlignment = Enum.TextXAlignment.Left
		textbox.Box.TextHolder.PlaceholderText = options.name

		if not Library.Flags[options.flag] then
			Library.Flags[options.flag] = options.value
		else
			textbox.Box.TextHolder.Text = Library.Flags[options.flag]
		end

		options.callback(Library.Flags[options.flag])
		textbox.Box.TextHolder.FocusLost:Connect(function()
			options.callback(textbox.Box.TextHolder.Text)
			Library.save_flags()
		end)

		function Textbox:update(text)
			textbox.Box.TextHolder.Text = text
			options.callback(text)
		end

        return Textbox;
    end
	function Tab:create_keybind(options)
		local section = options.section == 'left' and left_section or right_section
		local keybind = Instance.new("TextButton")
		keybind.Name = "Keybind"
		keybind.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
		keybind.BorderColor3 = Color3.fromRGB(0, 0, 0)
		keybind.BorderSizePixel = 0
		keybind.Position = UDim2.new(-0.0186046511, 0, 0.440860212, 0)
		keybind.Size = UDim2.new(0, 215, 0, 37)
		keybind.AutoButtonColor = false
		keybind.Font = Enum.Font.SourceSans
		keybind.Text = ""
		keybind.TextColor3 = Color3.fromRGB(0, 0, 0)
		keybind.TextSize = 14.000
		keybind.Parent = section

		local UICorner = Instance.new("UICorner")

		UICorner.CornerRadius = UDim.new(0, 10)
		UICorner.Parent = keybind
		
		local TextLabel = Instance.new("TextLabel")
		TextLabel.Parent = keybind
		TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.BorderSizePixel = 0
		TextLabel.Position = UDim2.new(0.424475819, 0, 0.5, 0)
		TextLabel.Size = UDim2.new(0, 155, 0, 15)
		TextLabel.ZIndex = 2
		TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		local Box = Instance.new("Frame")
		Box.Name = "Box"
		Box.Parent = keybind
		Box.AnchorPoint = Vector2.new(0.5, 0.5)
		Box.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
		Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Box.BorderSizePixel = 0
		Box.Position = UDim2.new(0.875459313, 0, 0.472972959, 0)
		Box.Size = UDim2.new(0, 27, 0, 21)

		local UICorner_2 = Instance.new("UICorner")
		UICorner_2.CornerRadius = UDim.new(0, 4)
		UICorner_2.Parent = Box

		
		local TextLabel_2 = Instance.new("TextLabel")
		TextLabel_2.Parent = Box
		TextLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
		TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_2.BackgroundTransparency = 1.000
		TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel_2.BorderSizePixel = 0
		TextLabel_2.Position = UDim2.new(0.630466938, 0, 0.5, 0)
		TextLabel_2.Size = UDim2.new(0, 29, 0, 15)
		TextLabel_2.ZIndex = 2
		TextLabel_2.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
		TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_2.TextScaled = true
		TextLabel_2.TextSize = 14.000
		TextLabel_2.TextWrapped = true

		keybind.TextLabel.Text = options.name
		keybind.Box.TextLabel.Text = options.keycode.Name

		if not Library.Flags[options.flag] then
			Library.Flags[options.flag] = options.keycode.Name
		end

		keybind.MouseButton1Click:Connect(function()
			keybind.Box.TextLabel.Text = '...'
			local a,b = UserInputService.InputBegan:Wait();
			if a.KeyCode.Name ~= 'Unknown' then
				keybind.Box.TextLabel.Text = a.KeyCode.Name
				Library.Flags[options.flag] = a.KeyCode.Name
				Library.save_flags()
			end
		end)

		UserInputService.InputBegan:Connect(function(current, pressed)
			if not pressed then
				if current.KeyCode.Name == Library.Flags[options.flag] then
					options.callback(Library.Flags[options.flag])
				end
			end
		end)
	end
    return Tab
end

return Library
